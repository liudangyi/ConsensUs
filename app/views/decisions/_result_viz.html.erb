<%
  width = 500
  height = 40
%>

<style>
  use {
    stroke-width: 1px;
    stroke: #999;
  }
</style>

<table id="rate-viz">
  <% ([nil] + @decision.criteria).each do |criterium| %>
    <tr>
      <td style="text-align: right;"><%= criterium&.name || 'Overall' %></td>
      <td>
        <svg class="<%= criterium ? 'criterium' : 'overall' %>" width="<%= width + 100 %>" height="<%= height %>">
          <rect y="<%= height / 2 - (criterium ? 1 : 10) %>" x="10" fill="#CCC"
            width="<%= width %>" height="<%= criterium ? 2 : 20 %>" rx="<%= criterium ? 1 : 10 %>"></rect>
        </svg>
      </td>
    </tr>
  <% end %>
</table>

<script>
var criteria = <%= raw @decision.criteria.to_json %>
var alternatives = <%= raw @decision.alternatives.to_json %>
var scores = <%= raw @scores.to_json %>
var myself = <%= raw current_user.email.to_json %>

var overall = d3.select('#overall')
var xScale = d3.scaleLinear().domain([0, 10]).range([10, <%= width + 10 %>])
var xPos = function(x, i) {
  if (x >= 0 && x <= 10) {
    return xScale(x)
  } else {
    return <%= width %> + 35 + i * 15
  }
}

criteria.unshift({ id: 'overall' })

scores['overall'] = {}
alternatives.forEach(a => {
  var count = {}, sum = 0
  scores['overall'][a.id] = {}
  criteria.forEach(c => {
    if (!scores[c.id][a.id]) return
    for (k in scores[c.id][a.id]) {
      if (scores[c.id][a.id][k] >= 0) {
        if (!scores['overall'][a.id][k]) {
          scores['overall'][a.id][k] = 0
          count[k] = 0
        }
        count[k]++
        scores['overall'][a.id][k] += scores[c.id][a.id][k]
      }
    }
  })
  for (k in scores['overall'][a.id]) {
    scores['overall'][a.id][k] /= count[k]
  }
})

d3.select('#rate-viz')
  .selectAll('svg')
  .data(criteria)
  .each(draw)

function draw(c, i) {
  var g = d3.select(this)
  var avgs = {}
  var dots = []

  alternatives.forEach(a => {
    var count = 0, sum = 0
    for (k in scores[c.id][a.id]) {
      if (scores[c.id][a.id][k] >= 0) {
        count++
        sum += scores[c.id][a.id][k]
      }
    }
    if (count > 0) {
      avgs[a.id] = sum / count
      dots.push({ id: a.id, type: 'average', r: 10, color: a.color, score: sum / count })
    }
  })

  alternatives.forEach((a, i) => {
    dots.push({ id: a.id, type: 'myself', r: 5, index: i, color: a.color, score: scores[c.id][a.id][myself] })
  })

  g.selectAll('circle')
    .data(dots)
  .enter().append('circle')
    .attr('id', a => a.type + c.id + a.id)
    .attr('cx', (a, i) => xPos(a.score, a.index))
    .attr('cy', <%= height / 2 %>)
    .attr('r', a => a.r)
    .attr('fill', a => '#' + a.color)
    .on('mouseover', a => {
      g.select('.label' + c.id + a.id).attr('visibility', 'show')
      use1.attr('xlink:href', '#average' + c.id + a.id)
      use2.attr('xlink:href', '#myself' + c.id + a.id)
    })
    .on('mouseout', a => {
      g.select('.label' + c.id + a.id).attr('visibility', 'hidden')
      use1.attr('xlink:href', '')
      use2.attr('xlink:href', '')
    })

  var use1 = g.append('use').attr('pointer-events', 'none')
  var use2 = g.append('use').attr('pointer-events', 'none')

  g.selectAll('polyline')
    .data(alternatives)
  .enter().append('polyline')
    .attr('class', a => 'label' + c.id + a.id)
    .attr('fill', 'none')
    .attr('stroke', '#F00')
    .attr('stroke-width', 2)
    .attr('stroke-linejoin', 'round')
    .attr('visibility', 'hidden')
    .attr('pointer-events', 'none')
    .attr('points', a => {
      var left = avgs[a.id] * <%= width / 10 %> + 10
      var right = scores[c.id][a.id][myself] * <%= width / 10 %> + 10
      if (left >= 0 && right >= 0) {
        return `${left},20 ${left},1 ${right},1 ${right},20`
      }
      return ''
    })
}

</script>
